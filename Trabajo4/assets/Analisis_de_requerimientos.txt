Requerimientos:
6 tramos por dia.
3 grupos por tramo.
2 botones en un formulario de tipo get para manejar los dias de este programa.
Un login para acceder al programa, si eres subdirector te lleva a un php con un calendario para elegir dia y poder eliminar,
registrar y dar de baja profesores (lo cual borra reservas futuras en caso que las tuviera),
y luego un php para ver todos los tramos del dia y su informacion y,
si eres profesor, un php con un calendario para elegir dia y una vista de sus reservas,
al elegir dia te lleva a un php con una tabla de 6 tramos y 3 radios por tramo (1 radio por fila) para reservar
una cantidad de tramos, la informacion del profesor aparecera en cada fila de cuyos tramos haya reservado,
no puedes ver la informacion de los tramos ya reservados, en su caso apareceran como filas grisaceas.
informacion de reserva: Nombre,Asignatura,Curso,NumAlumnos,NumTramos (franja horaria), dia/mes/a√±o de la reserva
Al reservar descargarse la informacion de la reserva como pdf
Cuestiones:

// Table: Profesores
CREATE TABLE Profesores (
    IdUsuario INT PRIMARY KEY,
    Nombre VARCHAR(50),
    Apellidos VARCHAR(50),
    Departamento VARCHAR(50),
    Email VARCHAR(100),
    Password VARCHAR(255),
    Alta DATE,
    Admin BOOLEAN
);

// Table: Clases
CREATE TABLE Clases (
    IdClase INT PRIMARY KEY,
    Nombre VARCHAR(50),
    NumAlumnos INT
);

// Table: Asignaturas
CREATE TABLE Asignaturas (
    IdAsignatura INT PRIMARY KEY,
    Nombre VARCHAR(50)
);

// Table: Horas (Reserva de horas del aula)
CREATE TABLE Horas (
    IdReserva INT PRIMARY KEY,
    HoraInicio TIME,
    HoraFin TIME,
    Fecha DATE,
    IdUsuario INT,
    IdClase INT,
    IdAsignatura INT,
    FOREIGN KEY (IdUsuario, IdClase, IdAsignatura) REFERENCES Profesor_Clase_Asignatura(IdUsuario, IdClase, IdAsignatura)
);

// Table: Clase_Asignatura (Many-to-Many relationship between Clases and Asignaturas)
CREATE TABLE Clase_Asignatura (
    IdClase INT,
    IdAsignatura INT,
    PRIMARY KEY (IdClase, IdAsignatura),
    FOREIGN KEY (IdClase) REFERENCES Clases(IdClase),
    FOREIGN KEY (IdAsignatura) REFERENCES Asignaturas(IdAsignatura)
);

// Table: Profesor_Clase_Asignatura (Ternary relationship between Profesores, Clases, and Asignaturas)
CREATE TABLE Profesor_Clase_Asignatura (
    IdUsuario INT,
    IdClase INT,
    IdAsignatura INT,
    PRIMARY KEY (IdUsuario, IdClase, IdAsignatura),
    FOREIGN KEY (IdUsuario) REFERENCES Profesores(IdUsuario),
    FOREIGN KEY (IdClase) REFERENCES Clases(IdClase),
    FOREIGN KEY (IdAsignatura) REFERENCES Asignaturas(IdAsignatura)
);
